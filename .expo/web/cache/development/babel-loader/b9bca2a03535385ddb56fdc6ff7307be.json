{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as Permissions from \"expo-permissions\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar bgImage = require(\"../assets/background2.png\");\n\nvar appIcon = require(\"../assets/appIcon.png\");\n\nvar RideScreen = function (_Component) {\n  _inherits(RideScreen, _Component);\n\n  var _super = _createSuper(RideScreen);\n\n  function RideScreen(props) {\n    var _this;\n\n    _classCallCheck(this, RideScreen);\n\n    _this = _super.call(this, props);\n\n    _this.getCameraPermissions = function _callee() {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                hasCameraPermissions: status === \"granted\",\n                domState: \"scanner\",\n                scanned: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleBarCodeScanned = function _callee2(_ref) {\n      var type, data;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = _ref.type, data = _ref.data;\n\n              _this.setState({\n                bikeId: data,\n                domState: \"normal\",\n                scanned: true\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      bikeId: \"\",\n      userId: \"\",\n      domState: \"normal\",\n      hasCameraPermissions: null,\n      scanned: false\n    };\n    return _this;\n  }\n\n  _createClass(RideScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          bikeId = _this$state.bikeId,\n          userId = _this$state.userId,\n          domState = _this$state.domState,\n          scanned = _this$state.scanned;\n\n      if (domState !== \"normal\") {\n        return _jsx(BarCodeScanner, {\n          onBarCodeScanned: scanned ? undefined : this.handleBarCodeScanned,\n          style: StyleSheet.absoluteFillObject\n        });\n      }\n\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsxs(View, {\n          style: styles.upperContainer,\n          children: [_jsx(Image, {\n            source: appIcon,\n            style: styles.appIcon\n          }), _jsx(Text, {\n            style: styles.title,\n            children: \"e-ride\"\n          }), _jsx(Text, {\n            style: styles.subtitle,\n            children: \"A Eco-Friendly Ride\"\n          })]\n        }), _jsxs(View, {\n          style: styles.lowerContainer,\n          children: [_jsx(View, {\n            style: styles.textinputContainer,\n            children: _jsx(TextInput, {\n              style: [styles.textinput, {\n                width: \"82%\"\n              }],\n              placeholder: \"User Id\",\n              placeholderTextColor: \"#FFFFFF\",\n              value: userId\n            })\n          }), _jsxs(View, {\n            style: [styles.textinputContainer, {\n              marginTop: 25\n            }],\n            children: [_jsx(TextInput, {\n              style: styles.textinput,\n              placeholder: \"Bicycle Id\",\n              placeholderTextColor: \"#FFFFFF\",\n              value: bikeId\n            }), _jsx(TouchableOpacity, {\n              style: styles.scanbutton,\n              onPress: function onPress() {\n                return _this2.getCameraPermissions();\n              },\n              children: _jsx(Text, {\n                style: styles.scanbuttonText,\n                children: \"Scan\"\n              })\n            })]\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return RideScreen;\n}(Component);\n\nexport { RideScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#D0E6F0\"\n  },\n  bgImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  },\n  upperContainer: {\n    flex: 0.5,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  appIcon: {\n    width: 200,\n    height: 200,\n    resizeMode: \"contain\",\n    marginTop: 80\n  },\n  title: {\n    fontSize: 40,\n    fontFamily: \"Rajdhani_600SemiBold\",\n    paddingTop: 20,\n    color: \"#4C5D70\"\n  },\n  subtitle: {\n    fontSize: 20,\n    fontFamily: \"Rajdhani_600SemiBold\",\n    color: \"#4C5D70\"\n  },\n  lowerContainer: {\n    flex: 0.5,\n    alignItems: \"center\"\n  },\n  textinputContainer: {\n    padding: 30,\n    borderWidth: 2,\n    borderRadius: 10,\n    flexDirection: \"row\",\n    backgroundColor: \"yellow\",\n    borderColor: \"#4C5D70\"\n  },\n  textinput: {\n    width: \"57%\",\n    height: 50,\n    padding: 10,\n    borderColor: \"#4C5D70\",\n    borderRadius: 10,\n    borderWidth: 3,\n    fontSize: 18,\n    backgroundColor: \"red\",\n    fontFamily: \"Rajdhani_600SemiBold\",\n    color: \"#FFFFFF\"\n  },\n  scanbutton: {\n    width: 100,\n    height: 50,\n    backgroundColor: \"#FBE5C0\",\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  scanbuttonText: {\n    fontSize: 24,\n    color: \"#4C5D70\",\n    fontFamily: \"Rajdhani_600SemiBold\"\n  },\n  button: {\n    width: \"43%\",\n    height: 55,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#FBE5C0\",\n    borderRadius: 20,\n    borderWidth: 2,\n    borderColor: \"#4C5D70\"\n  },\n  buttonText: {\n    fontSize: 24,\n    color: \"#4C5D70\",\n    fontFamily: \"Rajdhani_600SemiBold\"\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/e ride 3/screens/Ride.js"],"names":["React","Component","Permissions","BarCodeScanner","bgImage","require","appIcon","RideScreen","props","getCameraPermissions","askAsync","CAMERA","status","setState","hasCameraPermissions","domState","scanned","handleBarCodeScanned","type","data","bikeId","state","userId","undefined","StyleSheet","absoluteFillObject","styles","container","upperContainer","title","subtitle","lowerContainer","textinputContainer","textinput","width","marginTop","scanbutton","scanbuttonText","create","flex","backgroundColor","resizeMode","justifyContent","alignItems","height","fontSize","fontFamily","paddingTop","color","padding","borderWidth","borderRadius","flexDirection","borderColor","borderTopRightRadius","borderBottomRightRadius","button","buttonText"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;AAWA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;AACA,SAASC,cAAT,QAA+B,sBAA/B;;;;AAEA,IAAMC,OAAO,GAAGC,OAAO,6BAAvB;;AACA,IAAMC,OAAO,GAAGD,OAAO,yBAAvB;;IAEqBE,U;;;;;AACnB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAWnBC,oBAXmB,GAWI;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACIP,WAAW,CAACQ,QAAZ,CAAqBR,WAAW,CAACS,MAAjC,CADJ;;AAAA;AAAA;AACbC,cAAAA,MADa,yBACbA,MADa;;AAGrB,oBAAKC,QAAL,CAAc;AAIZC,gBAAAA,oBAAoB,EAAEF,MAAM,KAAK,SAJrB;AAKZG,gBAAAA,QAAQ,EAAE,SALE;AAMZC,gBAAAA,OAAO,EAAE;AANG,eAAd;;AAHqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAXJ;;AAAA,UAwBnBC,oBAxBmB,GAwBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,cAAAA,IAAT,QAASA,IAAT,EAAeC,IAAf,QAAeA,IAAf;;AACrB,oBAAKN,QAAL,CAAc;AACZO,gBAAAA,MAAM,EAAED,IADI;AAEZJ,gBAAAA,QAAQ,EAAE,QAFE;AAGZC,gBAAAA,OAAO,EAAE;AAHG,eAAd;;AADqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAxBJ;;AAEjB,UAAKK,KAAL,GAAa;AACXD,MAAAA,MAAM,EAAE,EADG;AAEXE,MAAAA,MAAM,EAAE,EAFG;AAGXP,MAAAA,QAAQ,EAAE,QAHC;AAIXD,MAAAA,oBAAoB,EAAE,IAJX;AAKXE,MAAAA,OAAO,EAAE;AALE,KAAb;AAFiB;AASlB;;;;WAuBD,kBAAS;AAAA;;AACP,wBAA8C,KAAKK,KAAnD;AAAA,UAAQD,MAAR,eAAQA,MAAR;AAAA,UAAgBE,MAAhB,eAAgBA,MAAhB;AAAA,UAAwBP,QAAxB,eAAwBA,QAAxB;AAAA,UAAkCC,OAAlC,eAAkCA,OAAlC;;AACA,UAAID,QAAQ,KAAK,QAAjB,EAA2B;AACzB,eACE,KAAC,cAAD;AACE,UAAA,gBAAgB,EAAEC,OAAO,GAAGO,SAAH,GAAe,KAAKN,oBAD/C;AAEE,UAAA,KAAK,EAAEO,UAAU,CAACC;AAFpB,UADF;AAMD;;AACD,aACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,mBACE,MAAC,IAAD;AAAM,UAAA,KAAK,EAAED,MAAM,CAACE,cAApB;AAAA,qBACE,KAAC,KAAD;AAAO,YAAA,MAAM,EAAEtB,OAAf;AAAwB,YAAA,KAAK,EAAEoB,MAAM,CAACpB;AAAtC,YADF,EAEE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEoB,MAAM,CAACG,KAApB;AAAA;AAAA,YAFF,EAGE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEH,MAAM,CAACI,QAApB;AAAA;AAAA,YAHF;AAAA,UADF,EAME,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEJ,MAAM,CAACK,cAApB;AAAA,qBACE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEL,MAAM,CAACM,kBAApB;AAAA,sBACE,KAAC,SAAD;AACE,cAAA,KAAK,EAAE,CAACN,MAAM,CAACO,SAAR,EAAmB;AAAEC,gBAAAA,KAAK,EAAE;AAAT,eAAnB,CADT;AAEE,cAAA,WAAW,EAAE,SAFf;AAGE,cAAA,oBAAoB,EAAE,SAHxB;AAIE,cAAA,KAAK,EAAEZ;AAJT;AADF,YADF,EASE,MAAC,IAAD;AAAM,YAAA,KAAK,EAAE,CAACI,MAAM,CAACM,kBAAR,EAA4B;AAAEG,cAAAA,SAAS,EAAE;AAAb,aAA5B,CAAb;AAAA,uBAEE,KAAC,SAAD;AACE,cAAA,KAAK,EAAET,MAAM,CAACO,SADhB;AAEE,cAAA,WAAW,EAAE,YAFf;AAGE,cAAA,oBAAoB,EAAE,SAHxB;AAIE,cAAA,KAAK,EAAEb;AAJT,cAFF,EASE,KAAC,gBAAD;AACE,cAAA,KAAK,EAAEM,MAAM,CAACU,UADhB;AAIC,cAAA,OAAO,EAAE;AAAA,uBAAM,MAAI,CAAC3B,oBAAL,EAAN;AAAA,eAJV;AAAA,wBAWE,KAAC,IAAD;AAAM,gBAAA,KAAK,EAAEiB,MAAM,CAACW,cAApB;AAAA;AAAA;AAXF,cATF;AAAA,YATF;AAAA,UANF;AAAA,QADF;AA0CD;;;;EArFqCpC,S;;SAAnBM,U;AAwFrB,IAAMmB,MAAM,GAAGF,UAAU,CAACc,MAAX,CAAkB;AAC/BX,EAAAA,SAAS,EAAE;AACTY,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE;AAFR,GADoB;AAK/BpC,EAAAA,OAAO,EAAE;AACPmC,IAAAA,IAAI,EAAE,CADC;AAEPE,IAAAA,UAAU,EAAE,OAFL;AAGPC,IAAAA,cAAc,EAAE;AAHT,GALsB;AAU/Bd,EAAAA,cAAc,EAAE;AACdW,IAAAA,IAAI,EAAE,GADQ;AAEdG,IAAAA,cAAc,EAAE,QAFF;AAGdC,IAAAA,UAAU,EAAE;AAHE,GAVe;AAe/BrC,EAAAA,OAAO,EAAE;AACP4B,IAAAA,KAAK,EAAE,GADA;AAEPU,IAAAA,MAAM,EAAE,GAFD;AAGPH,IAAAA,UAAU,EAAE,SAHL;AAIPN,IAAAA,SAAS,EAAE;AAJJ,GAfsB;AAqB/BN,EAAAA,KAAK,EAAE;AACLgB,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,UAAU,EAAE,sBAFP;AAGLC,IAAAA,UAAU,EAAE,EAHP;AAILC,IAAAA,KAAK,EAAE;AAJF,GArBwB;AA2B/BlB,EAAAA,QAAQ,EAAE;AACRe,IAAAA,QAAQ,EAAE,EADF;AAERC,IAAAA,UAAU,EAAE,sBAFJ;AAGRE,IAAAA,KAAK,EAAE;AAHC,GA3BqB;AAgC/BjB,EAAAA,cAAc,EAAE;AACdQ,IAAAA,IAAI,EAAE,GADQ;AAEdI,IAAAA,UAAU,EAAE;AAFE,GAhCe;AAoC/BX,EAAAA,kBAAkB,EAAE;AAClBiB,IAAAA,OAAO,EAAE,EADS;AAElBC,IAAAA,WAAW,EAAE,CAFK;AAGlBC,IAAAA,YAAY,EAAE,EAHI;AAIlBC,IAAAA,aAAa,EAAE,KAJG;AAKlBZ,IAAAA,eAAe,EAAE,QALC;AAMlBa,IAAAA,WAAW,EAAE;AANK,GApCW;AA4C/BpB,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAE,KADE;AAETU,IAAAA,MAAM,EAAE,EAFC;AAGTK,IAAAA,OAAO,EAAE,EAHA;AAITI,IAAAA,WAAW,EAAE,SAJJ;AAKTF,IAAAA,YAAY,EAAE,EALL;AAMTD,IAAAA,WAAW,EAAE,CANJ;AAOTL,IAAAA,QAAQ,EAAE,EAPD;AAQTL,IAAAA,eAAe,EAAE,KARR;AASTM,IAAAA,UAAU,EAAE,sBATH;AAUTE,IAAAA,KAAK,EAAE;AAVE,GA5CoB;AAwD/BZ,EAAAA,UAAU,EAAE;AACVF,IAAAA,KAAK,EAAE,GADG;AAEVU,IAAAA,MAAM,EAAE,EAFE;AAGVJ,IAAAA,eAAe,EAAE,SAHP;AAIVc,IAAAA,oBAAoB,EAAE,EAJZ;AAKVC,IAAAA,uBAAuB,EAAE,EALf;AAMVb,IAAAA,cAAc,EAAE,QANN;AAOVC,IAAAA,UAAU,EAAE;AAPF,GAxDmB;AAiE/BN,EAAAA,cAAc,EAAE;AACdQ,IAAAA,QAAQ,EAAE,EADI;AAEdG,IAAAA,KAAK,EAAE,SAFO;AAGdF,IAAAA,UAAU,EAAE;AAHE,GAjEe;AAsE/BU,EAAAA,MAAM,EAAE;AACNtB,IAAAA,KAAK,EAAE,KADD;AAENU,IAAAA,MAAM,EAAE,EAFF;AAGNF,IAAAA,cAAc,EAAE,QAHV;AAINC,IAAAA,UAAU,EAAE,QAJN;AAKNH,IAAAA,eAAe,EAAE,SALX;AAMNW,IAAAA,YAAY,EAAE,EANR;AAOND,IAAAA,WAAW,EAAE,CAPP;AAQNG,IAAAA,WAAW,EAAE;AARP,GAtEuB;AAgF/BI,EAAAA,UAAU,EAAE;AACVZ,IAAAA,QAAQ,EAAE,EADA;AAEVG,IAAAA,KAAK,EAAE,SAFG;AAGVF,IAAAA,UAAU,EAAE;AAHF;AAhFmB,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Text,\r\n  ImageBackground,\r\n  Image,\r\n  Alert\r\n} from \"react-native\";\r\nimport * as Permissions from \"expo-permissions\";\r\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\r\n\r\nconst bgImage = require(\"../assets/background2.png\");\r\nconst appIcon = require(\"../assets/appIcon.png\");\r\n\r\nexport default class RideScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      bikeId: \"\",\r\n      userId: \"\",\r\n      domState: \"normal\",\r\n      hasCameraPermissions: null,\r\n      scanned: false\r\n    };\r\n  }\r\n\r\n  getCameraPermissions = async () => {\r\n    const { status } = await Permissions.askAsync(Permissions.CAMERA);\r\n\r\n    this.setState({\r\n      /*status === \"granted\" is true when user has granted permission\r\n          status === \"granted\" is false when user has not granted the permission\r\n        */\r\n      hasCameraPermissions: status === \"granted\",\r\n      domState: \"scanner\",\r\n      scanned: false\r\n    });\r\n  };\r\n\r\n  handleBarCodeScanned = async ({ type, data }) => {\r\n    this.setState({\r\n      bikeId: data,\r\n      domState: \"normal\",\r\n      scanned: true\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { bikeId, userId, domState, scanned } = this.state;\r\n    if (domState !== \"normal\") {\r\n      return (\r\n        <BarCodeScanner\r\n          onBarCodeScanned={scanned ? undefined : this.handleBarCodeScanned}\r\n          style={StyleSheet.absoluteFillObject}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.upperContainer}>\r\n          <Image source={appIcon} style={styles.appIcon} />\r\n          <Text style={styles.title}>e-ride</Text>\r\n          <Text style={styles.subtitle}>A Eco-Friendly Ride</Text>\r\n        </View>\r\n        <View style={styles.lowerContainer}>\r\n          <View style={styles.textinputContainer}>\r\n            <TextInput\r\n              style={[styles.textinput, { width: \"82%\" }]}\r\n              placeholder={\"User Id\"}\r\n              placeholderTextColor={\"#FFFFFF\"}\r\n              value={userId}\r\n            />\r\n          </View>\r\n          <View style={[styles.textinputContainer, { marginTop: 25 }]}>\r\n\r\n            <TextInput\r\n              style={styles.textinput}\r\n              placeholder={\"Bicycle Id\"}\r\n              placeholderTextColor={\"#FFFFFF\"}\r\n              value={bikeId}\r\n            />\r\n\r\n            <TouchableOpacity\r\n              style={styles.scanbutton}\r\n\r\n            \r\n             onPress={() => this.getCameraPermissions()}\r\n            //  onPress={() => this.getCameraPermissions}\r\n             // onPress=() => this.getCameraPermissions()\r\n\r\n             \r\n\r\n            >\r\n              <Text style={styles.scanbuttonText}>Scan</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#D0E6F0\"\r\n  },\r\n  bgImage: {\r\n    flex: 1,\r\n    resizeMode: \"cover\",\r\n    justifyContent: \"center\"\r\n  },\r\n  upperContainer: {\r\n    flex: 0.5,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  appIcon: {\r\n    width: 200,\r\n    height: 200,\r\n    resizeMode: \"contain\",\r\n    marginTop: 80\r\n  },\r\n  title: {\r\n    fontSize: 40,\r\n    fontFamily: \"Rajdhani_600SemiBold\",\r\n    paddingTop: 20,\r\n    color: \"#4C5D70\"\r\n  },\r\n  subtitle: {\r\n    fontSize: 20,\r\n    fontFamily: \"Rajdhani_600SemiBold\",\r\n    color: \"#4C5D70\"\r\n  },\r\n  lowerContainer: {\r\n    flex: 0.5,\r\n    alignItems: \"center\"\r\n  },\r\n  textinputContainer: {\r\n    padding: 30,\r\n    borderWidth: 2,\r\n    borderRadius: 10,\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"yellow\",\r\n    borderColor: \"#4C5D70\"\r\n  },\r\n  textinput: {\r\n    width: \"57%\",\r\n    height: 50,\r\n    padding: 10,\r\n    borderColor: \"#4C5D70\",\r\n    borderRadius: 10,\r\n    borderWidth: 3,\r\n    fontSize: 18,\r\n    backgroundColor: \"red\",\r\n    fontFamily: \"Rajdhani_600SemiBold\",\r\n    color: \"#FFFFFF\"\r\n  },\r\n  scanbutton: {\r\n    width: 100,\r\n    height: 50,\r\n    backgroundColor: \"#FBE5C0\",\r\n    borderTopRightRadius: 10,\r\n    borderBottomRightRadius: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  scanbuttonText: {\r\n    fontSize: 24,\r\n    color: \"#4C5D70\",\r\n    fontFamily: \"Rajdhani_600SemiBold\"\r\n  },\r\n  button: {\r\n    width: \"43%\",\r\n    height: 55,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#FBE5C0\",\r\n    borderRadius: 20,\r\n    borderWidth: 2,\r\n    borderColor: \"#4C5D70\"\r\n  },\r\n  buttonText: {\r\n    fontSize: 24,\r\n    color: \"#4C5D70\",\r\n    fontFamily: \"Rajdhani_600SemiBold\"\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}